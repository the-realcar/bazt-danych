-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public.zajezdnie
(
    id_zajezdni bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    nazwa_zajezdni text NOT NULL,
    adres_zajezdni text NOT NULL,
    typ_zajezdni bigint NOT NULL,
    miasto text,
    dzielnica text,
    PRIMARY KEY (id_zajezdni)
);

CREATE TABLE IF NOT EXISTS public.typy_zajezdni
(
    typ_zajezdni bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    nazwa_typu text NOT NULL,
    PRIMARY KEY (typ_zajezdni)
);

CREATE TABLE IF NOT EXISTS public.pracownicy
(
    id_pracownika bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    imie text NOT NULL,
    nazwisko text NOT NULL,
    pesel bigint,
    wiek bigint,
    nr_tel bigint,
    id_stanowiska bigint NOT NULL,
    id_zajezdni bigint NOT NULL,
    PRIMARY KEY (id_pracownika)
);

CREATE TABLE IF NOT EXISTS public.stanowiska
(
    id_stanowiska bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ) PRIMARY KEY,
    stanowisko text NOT NULL
);

CREATE TABLE IF NOT EXISTS public.marki
(
    id_marki bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ) PRIMARY KEY,
    nazwa_marki text
);

CREATE TABLE IF NOT EXISTS public.modele
(
    id_modelu bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ) PRIMARY KEY,
    nazwa_modelu text
);

CREATE TABLE IF NOT EXISTS public.grupy
(
    id_grupy bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ) PRIMARY KEY,
    grupa text
);

CREATE TABLE IF NOT EXISTS public.rejestracje
(
    id_pojazdu bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    rejestracja text,
    PRIMARY KEY (id_pojazdu)
);

CREATE TABLE IF NOT EXISTS public.przydzialy
(
    id_przydzialu bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    id_pojazdu bigint NOT NULL,
    id_pracownika bigint NOT NULL,
    data_od date,
    data_do date,
    PRIMARY KEY (id_przydzialu, id_pojazdu, id_pracownika, data_od, data_do),
    UNIQUE (id_pojazdu),
    UNIQUE (id_pracownika)
);

CREATE TABLE IF NOT EXISTS public.przeglady
(
    id_przegladu bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    id_pojazdu bigint NOT NULL,
    data_przegladu date,
    id_rodzaj_przegldu bigint NOT NULL,
    opis text,
    koszt bigint,
    id_pracownika bigint,
    PRIMARY KEY (id_przegladu, id_pojazdu, opis, id_rodzaj_przegldu, data_przegladu)
);

CREATE TABLE IF NOT EXISTS public.rodzaje_przegladow
(
    id_rodzaju_przegladu bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    nazwa_rodzaju_przegladu text NOT NULL,
    PRIMARY KEY (id_rodzaju_przegladu)
);

CREATE TABLE IF NOT EXISTS public.marki_modele
(
    id_marki_modelu bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ) PRIMARY KEY,
    id_marki bigint,
    id_modelu bigint,
    id_grupy bigint
);

CREATE TABLE IF NOT EXISTS public.naprawy
(
    id_naprawy bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    id_pojazdu bigint NOT NULL,
    data_naprawy date,
    opis text,
    koszt bigint,
    id_pracownika bigint,
    PRIMARY KEY (id_naprawy)
);

CREATE TABLE IF NOT EXISTS public.firmy
(
    id_firmy bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    nawa_firmy text NOT NULL,
    opis_firmy text,
    PRIMARY KEY (id_firmy)
);

CREATE TABLE IF NOT EXISTS public.pojazdy
(
    id_pojazdu bigint NOT NULL PRIMARY KEY,
    id_marki_modelu bigint NOT NULL,
    rok_prod date,
    nr_VIN text
);

CREATE TABLE IF NOT EXISTS public.transakcje
(
    id_transakcji bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    tytul text NOT NULL,
    opis text,
    cena bigint NOT NULL,
    id_przetargu bigint,
    id_wypozyczenia bigint,
    PRIMARY KEY (id_transakcji)
);

CREATE TABLE IF NOT EXISTS public.przetargi
(
    id_przetargu bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ) PRIMARY KEY,
    nazwa text NOT NULL,
    opis text,
    ilosc_ofert bigint,
    cena_koncowa bigint
);

CREATE TABLE IF NOT EXISTS public.wypozyczenia
(
    id_wypozyczenia bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ) PRIMARY KEY,
    id_marka_model bigint NOT NULL,
    id_pojazdu bigint NOT NULL,
    cena bigint,
    firma_od bigint NOT NULL,
    firma_do bigint NOT NULL,
    data_od date,
    data_do date,
    id_przetargu bigint
);

ALTER TABLE IF EXISTS public.zajezdnie
    ADD FOREIGN KEY (typ_zajezdni)
    REFERENCES public.typy_zajezdni (typ_zajezdni) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pracownicy
    ADD FOREIGN KEY (id_stanowiska)
    REFERENCES public.stanowiska (id_stanowiska) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pracownicy
    ADD FOREIGN KEY (id_zajezdni)
    REFERENCES public.zajezdnie (id_zajezdni) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pojazdy
    ADD FOREIGN KEY (id_marki_modelu)
    REFERENCES public.marki_modele (id_marki_modelu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.marki_modele
    ADD FOREIGN KEY (id_marki)
    REFERENCES public.marki (id_marki) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.marki_modele
    ADD FOREIGN KEY (id_modelu)
    REFERENCES public.modele (id_modelu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.marki_modele
    ADD FOREIGN KEY (id_grupy)
    REFERENCES public.grupy (id_grupy) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rejestracje
    ADD FOREIGN KEY (id_pojazdu)
    REFERENCES public.pojazdy (id_pojazdu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.przydzialy
    ADD FOREIGN KEY (id_pojazdu)
    REFERENCES public.pojazdy (id_pojazdu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.przydzialy
    ADD FOREIGN KEY (id_pracownika)
    REFERENCES public.pracownicy (id_pracownika) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.przeglady
    ADD FOREIGN KEY (id_rodzaj_przegldu)
    REFERENCES public.rodzaje_przegladow (id_rodzaju_przegladu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.przeglady
    ADD FOREIGN KEY (id_pracownika)
    REFERENCES public.pracownicy (id_pracownika) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.przeglady
    ADD FOREIGN KEY (id_pojazdu)
    REFERENCES public.pojazdy (id_pojazdu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.naprawy
    ADD FOREIGN KEY (id_pojazdu)
    REFERENCES public.pojazdy (id_pojazdu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.naprawy
    ADD FOREIGN KEY (id_pracownika)
    REFERENCES public.pracownicy (id_pracownika) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.wypozyczenia
    ADD FOREIGN KEY (id_marka_model)
    REFERENCES public.marki_modele (id_marki_modelu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.wypozyczenia
    ADD FOREIGN KEY (id_pojazdu)
    REFERENCES public.pojazdy (id_pojazdu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.wypozyczenia
    ADD FOREIGN KEY (id_przetargu)
    REFERENCES public.przetargi (id_przetargu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.wypozyczenia
    ADD FOREIGN KEY (firma_od)
    REFERENCES public.firmy (id_firmy) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.wypozyczenia
    ADD FOREIGN KEY (firma_do)
    REFERENCES public.firmy (id_firmy) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transakcje
    ADD FOREIGN KEY (id_wypozyczenia)
    REFERENCES public.wypozyczenia (id_wypozyczenia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transakcje
    ADD FOREIGN KEY (id_przetargu)
    REFERENCES public.przetargi (id_przetargu) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;